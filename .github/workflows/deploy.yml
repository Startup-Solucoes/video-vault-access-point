

name: Deploy Application

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      deploy-timestamp: ${{ steps.timestamp.outputs.timestamp }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      env:
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        
    - name: Verify build
      uses: ./.github/actions/verify-build
      
    - name: Generate timestamp
      id: timestamp
      run: echo "timestamp=$(date +%s)" >> $GITHUB_OUTPUT
      
    - name: Create deployment package
      run: |
        tar -czf deploy.tar.gz dist/ package.json package-lock.json
        echo "Pacote de deploy criado com tamanho: $(du -h deploy.tar.gz | cut -f1)"
        
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: deployment-package-${{ github.sha }}
        path: deploy.tar.gz
        retention-days: 3

    - name: Build completion summary
      run: |
        echo "✅ Build completed successfully!"
        echo "📦 Build SHA: ${{ github.sha }}"
        echo "🕒 Build time: $(date)"
        if [ "${{ github.event_name }}" = "push" ]; then
          echo "📝 Para fazer deploy, execute o workflow manualmente escolhendo 'production'"
        fi

  deploy-production:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    environment:
      name: production
      url: https://tutoriaiserp.com.br
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: deployment-package-${{ github.sha }}
        
    - name: Transfer files to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        source: "deploy.tar.gz"
        target: "/tmp/"
        
    - name: Deploy to production server
      uses: ./.github/actions/deploy-to-server
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        timestamp: ${{ needs.build.outputs.deploy-timestamp }}
        
    - name: Production deployment notification
      run: |
        echo "🎉 PRODUCTION deployment completed!"
        echo "🔗 URL: https://tutoriaiserp.com.br"
        echo "👤 Approved by: ${{ github.actor }}"
        echo "📅 Deploy time: $(date)"

